#!/usr/bin/env php
<?php
define('DS', DIRECTORY_SEPARATOR);
define('ROOT_PATH', dirname(__FILE__, 3) . DS);
define('PATCH_PATH', ROOT_PATH . 'App' . DS . 'Patchs' . DS);
define('INSTALLATION_PATH', PATCH_PATH . DS . 'Installation' . DS);
define('API_SYSPATH', ROOT_PATH . 'vendor' . DS . 'Libertempo' . DS . 'libertempo-api' . DS);
define('CONFIG_PATH', ROOT_PATH . DS . 'cfg'. DS);
define('DUMP_PATH', ROOT_PATH . 'dump' . DS);
define('PUBLIC_PATH', ROOT_PATH . 'Public' . DS);
define('ASSETS_PATH', PUBLIC_PATH . 'Assets' . DS);
define('IMG_PATH', ASSETS_PATH . 'Img' . DS);
define('API_PATH', ROOT_PATH . 'api' . DS);
define('_PHP_CONGES', 1);

require_once ROOT_PATH . 'vendor/autoload.php';
require_once ROOT_PATH . 'fonctions_conges.php';
require_once CONFIG_PATH . 'dbconnect.php';

/**
 * Affiche un cas d'erreur et s'arrête
 */
function displayError(string $message) {
    echo 'Installation échouée : ' . $message . '.', "\n";
    exit(1);
}

function setLastMaj(\includes\SQL $db, string $versionLastMaj) : bool
{
    $req = 'UPDATE `conges_appli` SET appli_valeur = "' . $versionLastMaj . '" WHERE appli_variable = "version_last_maj" LIMIT 1';
    $db->query($req);
    // @TODO: Compat with <1.12 versions
    if ($db->affected_rows > 0) {
        return true;
    }
    return 0 < file_put_contents('/tmp/lt-last-version', $versionLastMaj);
}

/**
 * Définit un nom pour l'instance. Doit coller à ce que le vhost a déclaré.
 */
function nameInstance(\includes\SQL $db, string $name) : bool
{
    if (!filter_var($name, FILTER_VALIDATE_URL)) {
        return false;
    }

    $req = 'UPDATE `conges_config` SET conf_valeur = "' . $db->quote($name) . '"
    WHERE conf_nom = "URL_ACCUEIL_CONGES" LIMIT 1';
    $db->query($req);

    // @TODO: à supprimer quand la mise à jour des vhosts sera effective
    $path = parse_url($name, \PHP_URL_PATH);
    $contentFile = file_get_contents(API_PATH . '.htaccess.example');
    $newContent = str_replace('vendor', $path . 'vendor', $contentFile);
    return file_put_contents(API_PATH . '.htaccess', $newContent);
}

/**
 * Définit les données de configuration pour l'API
 *
 * @param array $data Données de configuration
 */
function setDataConfigurationApi(string $server, string $base, string $user, string $password) : bool
{
    $data = [
        'db' => [
            'serveur' => $server,
            'base' => $base,
            'utilisateur' => $user,
            'mot_de_passe' => $password,
        ],
    ];

    return file_put_contents(API_SYSPATH . 'configuration.json', json_encode($data));
}

/**
 * Execute le fichier de patch d'installation et retourne sa version
 */
function executePatch() : string
{
    $currentPatch = "0.0";
    foreach (glob(INSTALLATION_PATH . '/*.sql') as $filename) {
        $currentPatch = basename($filename, '.sql');
        // il n'est sensé n'y en avoir qu'un
        execute_sql_file($filename);
        break;
    }

    return $currentPatch;
}

echo 'Installation…', "\n";

// Quelques vérifications de base…
$instanceName = $argv[1] ?? null;
if (null == $instanceName) {
    displayError("Nom d'instance vide");
}

if (0 != \install\Fonctions::getInstalledVersion()) {
    displayError('Application déjà installée');
}

list($major, $minor,) = explode('.', executePatch());
$versionMaj = $major . '.' . $minor;

$db = \includes\SQL::singleton();
if(!setLastMaj($db, $versionMaj)) {
    displayError('Mise à jour du patch échouée');
}

if (!nameInstance($db, $instanceName)) {
    displayError('Nommage de l\'instance impossible');
}

if (!setDataConfigurationApi($mysql_serveur, $mysql_database, $mysql_user, $mysql_pass)) {
    displayError('Configuration de l\'API impossible');
}

$updateLang = "UPDATE conges_config SET conf_valeur = 'fr_FR' WHERE conf_nom = 'lang' LIMIT 1";
$db->query($updateLang);

echo 'Installation terminée avec succès.', "\n";
